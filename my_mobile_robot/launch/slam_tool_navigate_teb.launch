<launch>

   <!-- Arguments -->

<arg name="set_base_frame" default="base_link"/>
<arg name="set_odom_frame" default="odom"/>
<arg name="set_map_frame" default="map"/>
<arg name="scan_topic" default="/scan"/>

<arg name="cmd_vel_topic" default="/cmd_vel" />
<arg name="odom_topic" default="/odom" />

   <!-- URDF model -->
<param name="robot_description" command="$(find xacro)/xacro '$(find my_mobile_robot)/urdf/robot.urdf.xacro'" />


   <!-- joint state publisher -->
<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
<param name="use_gui" value="False"/>
</node>  


   <!--Publish robot state and transforms-->
<node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher"></node>


   <!-- Bring up LiDAR -->
<node name="ydlidar_lidar_publisher" pkg="ydlidar_ros_driver" type="ydlidar_ros_driver_node" output="screen" respawn="false" >
	
<!-- string property -->
<param name="port" type="string" value="/dev/ttyUSB1"/>
<param name="frame_id" type="string" value="laser_frame"/>
<param name="ignore_array" type="string" value=""/>

<!-- int property -->
<param name="baudrate" type="int" value="115200"/>
<!-- 0:TYPE_TOF, 1:TYPE_TRIANGLE, 2:TYPE_TOF_NET -->
<param name="lidar_type" type="int" value="1"/>
<!-- 0:YDLIDAR_TYPE_SERIAL, 1:YDLIDAR_TYPE_TCP -->
<param name="device_type" type="int" value="0"/>
<param name="sample_rate" type="int" value="3"/>
<param name="abnormal_check_count" type="int" value="4"/>

<!-- bool property -->
<param name="resolution_fixed" type="bool" value="true"/>
<param name="auto_reconnect" type="bool" value="true"/>
<param name="reversion" type="bool" value="false"/>
<param name="inverted" type="bool" value="true"/>
<param name="isSingleChannel" type="bool" value="true"/>
<param name="intensity" type="bool" value="false"/>
<param name="support_motor_dtr" type="bool" value="true"/>
<param name="invalid_range_is_inf" type="bool" value="false"/>
<param name="point_cloud_preservative" type="bool" value="false"/>

<!-- float property -->
<param name="angle_min" type="double" value="-180" />
<param name="angle_max" type="double" value="180" />
<param name="range_min" type="double" value="0.1" />
<param name="range_max" type="double" value="12.0" />
<!-- frequency is invalid, External PWM control speed -->
<param name="frequency" type="double" value="10.0"/>
</node>

<node pkg="tf" type="static_transform_publisher" name="base_link_to_laser4"
args="0.0 0.0 0.2 0 0.0 0.0 /base_link /laser_frame 40" />


<!-- LASER scan matcher -->
<!-- node pkg="laser_scan_matcher" type="laser_scan_matcher_node" name="laser_scan_matcher_node" output="screen">
<param name="max_iterations" value="20"/>
<param name="fixed_frame" value="map"/>
</node-->


<node pkg="rf2o_laser_odometry" type="rf2o_laser_odometry_node" name="rf2o_laser_odometry" output="screen">
    <param name="laser_scan_topic" value="/scan"/>        # topic where the lidar scans are being published
    <param name="odom_topic" value="/odom" />              # topic where tu publish the odometry estimations
    <param name="publish_tf" value="true" />                   # wheter or not to publish the tf::transform (base->odom)
    <param name="base_frame_id" value="base_link"/>            # frame_id (tf) of the mobile robot base. A tf transform from the laser_frame to the base_frame is mandatory
    <param name="odom_frame_id" value="odom" />                # frame_id (tf) to publish the odometry estimations    
    <param name="init_pose_from_topic" value="" /> 		  # (Odom topic) Leave empty to start at point (0,0)
    <param name="freq" value="6.0"/>                            # Execution frequency.
    <param name="verbose" value="true" />                       # verbose
</node>

<!-- navigation_stack -->





<node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
        <rosparam file="$(find my_mobile_robot)/config/teb/costmap_common_teb_params.yaml" command="load" ns="global_costmap" />
        <rosparam file="$(find my_mobile_robot)/config/teb/costmap_common_teb_params.yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find my_mobile_robot)/config/teb/local_costmap_teb_params.yaml" command="load" />
        <rosparam file="$(find my_mobile_robot)/config/teb/global_costmap_teb_params.yaml" command="load" />
        <rosparam file="$(find my_mobile_robot)/config/teb/base_global_planner_teb_params.yaml" command="load" />
        <rosparam file="$(find my_mobile_robot)/config/teb/base_local_planner_teb_params.yaml" command="load" />
        <rosparam file="$(find my_mobile_robot)/config/teb/move_base_teb_params.yaml" command="load" />
        <remap from="cmd_vel" to="$(arg cmd_vel_topic)"/>
	<remap from="odom" to="$(arg odom_topic)"/>
	
</node>


<arg
name="odom_frame" default="odom" /> rviz--> <node pkg="rviz" type="rviz" name="rviz"
args="-d $(find my_mobile_robot)/rviz/navigation.rviz"></node>


   <!-- SLAM Toolbox -->
<node pkg="slam_toolbox" type="async_slam_toolbox_node" name="slam_toolbox" output="screen">
<rosparam command="load" file="$(find my_mobile_robot)/config/mapper_params_online_async_local.yaml" />
</node>

<node name="serial_node"        pkg="rosserial_arduino"      type="serial_node.py">
    <param name="port"              type="string"               value="/dev/ttyUSB0"/>
    <param name="baud"              type="int"                  value="57600"/>
    </node>		

</launch>
